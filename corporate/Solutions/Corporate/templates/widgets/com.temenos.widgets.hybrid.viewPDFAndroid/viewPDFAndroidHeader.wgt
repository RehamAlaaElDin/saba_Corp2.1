$%COMMENT$ $Revision: 1.1 $ - DO NOT EDIT - widget file maintained by UXP $%ENDCOMMENT$
<script type="text/javascript" charset="utf-8">
//<![CDATA[
window.com=window.com||{};
window.com.temenos=window.com.temenos||{};
window.com.temenos.widgets=window.com.temenos.widgets||{};
window.com.temenos.widgets.hybrid=window.com.temenos.widgets.hybrid||{};

window.com.temenos.widgets.hybrid.viewPDFAndroid = (function () {
   
    var viewPDFAndroid = {};        

    viewPDFAndroid.viewPDF = function (url, fileName) {
        var debug_mode = false;
        
        var isAbsoluteUrl = /^([a-z]+:\/\/|\/\/)/i.test(url);
        
        var absoluteUrl = isAbsoluteUrl ? url: [location.protocol, '//', location.host, url.replace(/^\/?/, '/')].join('')
        var progressIndicatorEnabled = true;

        //show the progress indicator, if enabled in the hybrid shell
        progressIndicatorEnabled = progressIndicatorEnabled && (typeof showProgress === "function") && (typeof closeProgress === "function");
    
        if (!fileName) {
            var parts = absoluteUrl.split('/');
            fileName = parts.pop() ? parts.pop() : 'report.pdf'; 
        }
        
        if(progressIndicatorEnabled) {
            showProgress();
        }

        window.requestFileSystem(window.TEMPORARY , 0, function (fs) {
            logDebugMessage('file system open: ' + fs.name);
            fs.root.getFile(fileName, { create: true, exclusive: false }, function (fileEntry) {
                downloadFile(fileEntry, absoluteUrl);
            }, onFileTranferError);
        }, onFileTranferError);

        var downloadFile = function(fileEntry, uri) {
            var fileTransfer = new FileTransfer();
            var fileURL = fileEntry.toURL();

            fileTransfer.download(
                uri,
                fileURL,
                function (entry) {
                    logDebugMessage('file transfer complete: ' + entry.toURL());
                    openPDFViewer(fileEntry);
                    if(progressIndicatorEnabled) {
                        closeProgress();
                    }
                },
                onFileTranferError,
                null, // or, pass false
                {
                    //headers: {
                    //    'Authorization': 'Basic dGVzdHVzZXJuYW1lOnRlc3RwYXNzd29yZA=='
                    //}
                }
            );
        };
        
        var openPDFViewer = function (fileEntry) {
            var url = fileEntry.toURL();

            var onError = function (error){
                console.log(error);
            };

            var mimeType = 'application/pdf';
            cordova.plugins.temenos.OpenFileInExternalViewer.viewDocument(url, mimeType, onError);
        };    
        
        var onFileTranferError = function(error) {
            console.log('download error source ' + error.source);
            console.log('download error target ' + error.target);
            console.log('download error code' + error.code);
        };
        
        var logDebugMessage = function (message) {
            if (debug_mode) {
                console.log(message);
            }
        };
    };
    
    return viewPDFAndroid;
})();   
//]]>
</script>